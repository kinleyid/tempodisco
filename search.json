[{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://kinleyid.github.io/tempodisco/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Copyright (C) program free software: can redistribute /modify terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details. received copy GNU General Public License along program. , see http://www.gnu.org/licenses/. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: Copyright (C)  program comes ABSOLUTELY WARRANTY; details type ‘show w’. free software, welcome redistribute certain conditions; type ‘show c’ details. hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.>"},{"path":"https://kinleyid.github.io/tempodisco/articles/area-under-curve.html","id":"model-free-auc","dir":"Articles","previous_headings":"","what":"Model-free AUC","title":"Computing area under the curve (AUC)","text":"“Area curve” (AUC) measure discounting advantage assuming underlying discount function ((Myerson et al., 2001)[https://doi.org/10.1901/jeab.2001.76-235]). already computed indifference points, can pass directly AUC function: However, choice-level data, need first compute indifference points. , can call td_bcnm() discount_function = \"model_free\" (fits indifference point delay rather computing indifference points based discount function) extract indifference points dataframe using indiffs(): AUC computed way, later indifference points tend outsize influence overall measure. address , Borges et al. (2016) suggest transforming delays log ordinal scale. implemented del_transform argument AUC(): Note area curve always computed starting delay 0, indifference point 1 assumed.","code":"data(\"td_ip_simulated_ptpt\") head(td_ip_simulated_ptpt) #>   del    indiff #> 1   3 0.9987226 #> 2   7 0.9866823 #> 3  20 0.9816838 #> 4  55 0.9489135 #> 5 148 0.8035958 #> 6 403 0.8001508 AUC(td_ip_simulated_ptpt) #> [1] 0.1296151 data(\"td_bc_single_ptpt\") indiff_mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'model-free') indiff_data <- indiffs(indiff_mod) head(indiff_data) #>         del    indiff #> 1    7.0000 1.0000000 #> 2   30.4167 0.7582115 #> 3  182.5000 0.0847121 #> 4  730.5000 0.0000000 #> 5 3652.5000 0.0000000 AUC(indiff_data) #> [1] 0.03146756 AUC(indiff_data, del_transform = 'log') #> [1] 0.4978852 AUC(indiff_data, del_transform = 'ord') #> [1] 0.4685847"},{"path":"https://kinleyid.github.io/tempodisco/articles/area-under-curve.html","id":"model-based-auc","dir":"Articles","previous_headings":"","what":"Model-based AUC","title":"Computing area under the curve (AUC)","text":"AUC can also useful non-parametric measure discounting allows comparisons across different discount functions. “model-based AUC” computed integrating curve produced discount function (Gilroy & Hantula, 2018). compute model-based AUC, first need fit model uses discount function call AUC() model: can use max_del acgument integrate certain delay, case maximum delays differ participants: model-free AUC, can transform delays log scale. ordinal transformation applicable well-defined points ordinal scale. Note del_transform = 'log', subtle difference calling AUC() table indifference points calling “model-free” discount function: table indiffernece points, indifference point interpolations linear transformed delays (illustrated first plot ). contrast, model-free discount function, interpolations indifference points linear original scale data. evident curved interpolations second plot :   indeed, AUC calculations slightly different:","code":"data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'hyperbolic') AUC(mod) #> [1] 0.06592175 AUC(mod, max_del = 1000) #> [1] 0.1681596 AUC(mod, del_transform = 'log') #> [1] 0.5014776 # Linear in transformed scale: plot(indiff ~ del, td_ip_simulated_ptpt, log = 'x', type = 'l', ylim = c(0, 1)) points(indiff ~ del, td_ip_simulated_ptpt) # Linear in original scale: mod <- td_ipm(td_ip_simulated_ptpt, discount_function = 'model-free') plot(mod, log = 'x', verbose = F) AUC(td_ip_simulated_ptpt, del_transform = 'log') #> [1] 0.669255 AUC(mod, del_transform = 'log') #> [1] 0.6769932"},{"path":"https://kinleyid.github.io/tempodisco/articles/choice-rules.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Choice rules","text":"modeling binary choice data using td_bcnm, discount function also choice rule must specified. Whereas discount function parameterized specify subjective value future reward decreases delay, choice rule parameterized specify probability choosing either two rewards whose subjective values given. illustrate, plot(... type = \"summary\") visualizes discount function:  whereas plot(... type = \"endpoints\") visualizes choice rule:  Just can fit range discount functions data, can also fit several choice rules using choice_rule argument td_bcnm. gives probability selecting immediate reward, P()P(), given subjective values immediate delayed rewards (VIV_I VDV_D, respectively, VIV_I simply face value immediate reward VDV_D depends discount curve) “sharpness” parameter γ≥0\\gamma \\geq 0, larger γ\\gamma reflects less “noisy” decision making. Available choice rules listed .","code":"# Load data and fit model data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = \"hyperbolic\") # Plot the discount curve plot(mod, type = \"summary\", verbose = F) # Plot the choice rule plot(mod, type = \"endpoints\", del = 50, val_del = 200, verbose = F)"},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/articles/choice-rules.html","id":"logistic","dir":"Articles","previous_headings":"Available choice rules","what":"Logistic","title":"Choice rules","text":"choice_rule = \"logistic\" (default) gives logistic choice rule: P()=σ[γ(VI−VD)] P() = \\sigma\\left[\\gamma \\left( V_I - V_D \\right) \\right] σ\\sigma logistic function x↦(1+exp{−x})−1x \\mapsto (1 + \\exp\\{-x\\})^{-1}, CDF logistic distribution location parameter 0 scale parameter 1.","code":""},{"path":"https://kinleyid.github.io/tempodisco/articles/choice-rules.html","id":"probit","dir":"Articles","previous_headings":"Available choice rules","what":"Probit","title":"Choice rules","text":"choice_rule = \"probit\" gives probit choice rule: P()=Φ[γ(VI−VD)] P() = \\Phi\\left[\\gamma \\left( V_I - V_D \\right) \\right] Φ\\Phi CDF standard normal distribution.","code":""},{"path":"https://kinleyid.github.io/tempodisco/articles/choice-rules.html","id":"power","dir":"Articles","previous_headings":"Available choice rules","what":"Power","title":"Choice rules","text":"choice_rule = \"power\" gives power choice rule (Luce, 1959/2005): P()=VIγVIγ+VDγ P() = \\frac{V_I^\\gamma}{V_I^\\gamma + V_D^\\gamma} CDF log-logistic distribution scale parameter 1 shape parameter γ\\gamma.","code":""},{"path":"https://kinleyid.github.io/tempodisco/articles/choice-rules.html","id":"comparing-choice-rules","dir":"Articles","previous_headings":"","what":"Comparing choice rules","title":"Choice rules","text":"Broadly speaking, logistic probit choice rules similar—based “Fechner model” (Becker, DeGroot, & Marschak, 1963) comparisons subjective reward values “noisy”: P()=Pr(VI−VD<ε) P() = \\Pr(V_I - V_D < \\varepsilon ) noise, represented random variable ε\\varepsilon, assumed follow either logistic distribution logistic choice rule, normal distribution probit choice rule. contrast, power choice rule taken imply following Fechner-like model: P()=Pr(VIVD<ε) P() = \\Pr\\left( \\frac{V_I}{V_D} < \\varepsilon \\right) ε\\varepsilon now assumed follow log-logistic distribution. Mathematical details can found Kinley, Oluwasola & Becker (2025). theoretical differences choice rules following practical implications: logistic probit choice rules, decisions less stochastic (.e., γ\\gamma effectively higher) larger reward magnitudes, whereas decision stochasticity constant (.e., γ\\gamma effectively constant) power choice rule. evidence real human decision making indeed less stochastic larger reward values (Gershman & Bhui, 2020). However, obvious trying capture effect data narrow range reward magnitudes improve model fit. logistic probit choice rules, P()P() never exactly 0 1. contrast, power choice rule, P()=0P() = 0 VI=0V_I = 0. Thus, power choice rule, model fit strongly negatively impacted participant ever chose immediate reward 0. However, decisions arguably better used attention checks model fitting (cf. Almog et al., 2023). see differences power choice rule one hand logistic probit choice rules , can visualize predictions participant:  suggested log likelihood measurements shown plot , choice rule can significantly impact model fit (Wulff & van den Bos, 2017). Therefore good idea explore multiple choice rules given dataset.","code":"vis_del <- sort(unique(td_bc_single_ptpt$del))[2] newdata <- data.frame(del = vis_del, val_del = 200, val_imm = seq(0, 200, length.out = 1000)) plot(imm_chosen ~ val_imm, data = subset(td_bc_single_ptpt, del == vis_del),      xlim = c(0, 200), ylim = c(0, 1)) plot_legend <- c(\"red\" = \"logistic\",                  \"blue\" = \"probit\",                  \"forestgreen\" = \"power\") logLiks <- c() for (entry in names(plot_legend)) {   choice_rule <- plot_legend[entry]   mod <- td_bcnm(td_bc_single_ptpt,                  discount_function = \"hyperbolic\",                  choice_rule = choice_rule)   logLiks[entry] <- logLik(mod)   preds <- predict(mod, type = 'response', newdata = newdata)   lines(preds ~ newdata$val_imm, col = entry) } legend(0, 1,        fill = names(plot_legend),        legend = paste(plot_legend, '; log lik. = ', round(logLiks, 1), sep = ''))"},{"path":"https://kinleyid.github.io/tempodisco/articles/custom-discount-functions.html","id":"example-1-hyperbolic-function-with-magnitude-effect","dir":"Articles","previous_headings":"","what":"Example 1: hyperbolic function with magnitude effect","title":"Creating custom discount functions","text":"first step create custom discount function define function computes indifference point given arguments data (dataframe) p (vector parameters). example, following describes hyperbolic discounting magnitude effect accounted Vincent (2015): k=exp[mlogvaldel+c′]k = \\exp[ m \\log \\text{val}_\\text{del} + c' ]k=c⋅valdelmk = c \\cdot {\\text{val}_\\text{del}}^m Next, specify range values parameter can take . kk always positive, meaning cc positive. mm can take value. optimization, function must initially evaluated set parameter values. can specify similar list: provide one possible starting value per parameter way, combination starting values tried optimization, best resulting fit kept. Optionally, can define function compute ED50 (delay function returns 0.5). case, ED50 : define function, ED50() method solve ED50 value numerically. ingredients, can create custom discount function call td_fn(): next step try fitting model:","code":"indiff_fn <- function(data, p) {   k <- p['c'] * data$val_del^p['m']   1 / (1 + k * data$del) } par_lims <- list(c = c(0, Inf)) par_starts <- list(m = c(-1, 0, 1),                    c = c(-10, -5, -1)) ED50_fn <- function(p, val_del) {   k <- p['c'] * val_del^p['m']   1 / k } custom_discount_function <- td_fn(name = 'hyp-mag-eff',                                   fn = indiff_fn,                                   par_starts = par_starts,                                   par_lims = par_lims,                                   ED50 = ED50_fn) print(custom_discount_function) #>  #> \"hyp-mag-eff\" temporal discounting function #>  #> Indifference points: #> { #>     k <- c * val_del^m #>     1/(1 + k * del) #> } #>  #> Parameter limits: #> 0 < c < Inf #> -Inf < m < Inf data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = custom_discount_function) print(mod) #>  #> Temporal discounting binary choice model #>  #> Discount function: hyp-mag-eff, with coefficients: #>  #>          m          c      gamma  #> 0.06467234 0.01230133 0.06721089  #>  #> Config: #>  noise_dist: logis #>  gamma_scale: linear #>  transform: identity #>  #> ED50: 57.7394519246891 #> AUC: 0.0658081315115585 #> BIC: 39.8740195369945"},{"path":"https://kinleyid.github.io/tempodisco/articles/custom-discount-functions.html","id":"example-2-dual-systems-hyperbolic","dir":"Articles","previous_headings":"","what":"Example 2: dual-systems hyperbolic","title":"Creating custom discount functions","text":"Let’s create discount function similar dual-systems function (Van den Bos & McClure, (2013))[https://doi.org/10.1002/jeab.6], hyperbolic discounting system rather exponential. , ’ve added parameter checker function par_chk ensure certain conditions met parameters. ’ll define k1k_1 patient system, meaning want ensure k1<k2k_1 < k2. Note haven’t specified function compute ED50. model defined, can fit data:","code":"dsh <- td_fn(name = 'dual-systems-hyperbolic',              fn = function(data, p) {                p['w'] * 1/(1 + p['k1']*data$del) + (1 - p['w']) * 1/(1 + p['k2']*data$del)              },              par_starts = list(k1 = c(0.001, 0.0001),                                k2 = c(0.1, 0.01),                                w = 0.5),              par_lims = list(w = c(0, 1),                              k1 = c(0, Inf),                              k2 = c(0, Inf)),              par_chk = function(p) {                # Ensure k1 < k2                if (p['k1'] > p['k2']) {                  # Switch k1 and k2                  k2 <- p['k1']                  k1 <- p['k2']                  p['k1'] <- k1                  p['k2'] <- k2                  # Complement of w                  p['w'] <- 1 - p['w']                }                return(p)              }) print(dsh) #>  #> \"dual-systems-hyperbolic\" temporal discounting function #>  #> Indifference points: #> { #>     w * 1/(1 + k1 * del) + (1 - w) * 1/(1 + k2 * del) #> } #>  #> Parameter limits: #> 0 < w < 1 #> 0 < k1 < Inf #> 0 < k2 < Inf mod <- td_bcnm(td_bc_single_ptpt, discount_function = dsh) print(mod) #>  #> Temporal discounting binary choice model #>  #> Discount function: dual-systems-hyperbolic, with coefficients: #>  #>         k1         k2          w      gamma  #> 0.01726021 0.01729258 0.49511114 0.06749238  #>  #> Config: #>  noise_dist: logis #>  gamma_scale: linear #>  transform: identity #>  #> ED50: 57.8818909718295 #> AUC: 0.0659320948311096 #> BIC: 44.1751992280079"},{"path":"https://kinleyid.github.io/tempodisco/articles/drift-diffusion-models.html","id":"the-drift-diffusion-model","dir":"Articles","previous_headings":"","what":"The drift diffusion model","title":"Drift diffusion models","text":"Drift diffusion models (DDMs; Ratcliff, 1978) predict binary choices also response times (RTs), can applied intertemporal choice data (Peters & D’Esposito, 2020). DDMs model decision making process noisy evidence accumulation evidence XX begins value β\\beta evolves according stochastic differential equation ddtX∼ν+ω\\frac{d}{dt}X \\sim \\nu + \\omega δ\\delta drift rate, ω\\omega normally distributed noise 0 mean unit variance. Evidence begins accumulating non-decision period τ\\tau complete XX reaches either 0 (meaning delayed reward chosen) threshold α\\alpha (meaning immediate reward chosen). Thus, model captures speed-accuracy tradeoffs: α\\alpha increases, decisions slower “accurate” (.e., reflective decision maker’s relative preferences). package relies Wabersich Vandekerckhove’s (2014) RWiener compute first passage times diffusion process. Following Peters & D’Esposito (2020), drift rate computed multiplying difference subjective values scale factor vv: δ=v(Vimm−Vdelf(t;𝐩))\\delta = v\\big( V_\\text{imm} - V_\\text{del}f(t;\\mathbf{p})\\big) VimmV_\\text{imm} value immediate reward, VdelV_\\text{del} value delayed reward, f(t;𝐩)f(t;\\mathbf{p}) discount function parameterized 𝐩\\mathbf{p} evaluated delay delayed reward tt (.e., tt equation refer time within single decision trial previous equation).","code":""},{"path":"https://kinleyid.github.io/tempodisco/articles/drift-diffusion-models.html","id":"fitting-drift-diffusion-models","dir":"Articles","previous_headings":"","what":"Fitting drift diffusion models","title":"Drift diffusion models","text":"Often, extreme RTs first excluded, using either absolute relative cutoffs. , exclude fastest 2.5% slowest 2.5% responses. Next, can fit drift diffusion model. , sake speed, providing starting values parameters close optimal testing exponential discount function. can see, parameters estimated discount function (kk), also DDM (vv, β\\beta, α\\alpha τ\\tau). can extracted using coef() collect group-level analysis (see vignette “Analyzing data multiple participants”). model classes (td_bcnm, td_bclm), can plot resulting discount function:  gaps correspond fast slow decisions excluded. Moreover, DDMs model RTs, can compare predicted RTs actual data: expected, correlated. compare visually, can plot() DDM argument type = \"rt\":  displays predicted RTs model 90% quantile-based confidence interval Fontanesi et al. (2019) suggest applying sigmoid transform drift rates according following equation, reported Peters & D’Esposito (2020) improve model fit intertemporal choice data: δ′=vmax(21+exp{−δ}−1)\\delta' = v_\\text{max} \\left(\\frac{2}{1 + \\exp\\{-\\delta\\}} - 1\\right) can incorporate model using argument drift_transform = \"sigmoid\": Sure enough, model sigmoid transform performs better per Bayesian information criterion. Plotting probability choosing immediate reward drift rate, can see many datapoints pushed either extreme, creating good separation cases immediate versus delayed rewards chosen.","code":"data(\"td_bc_single_ptpt\") rt_cutoffs <- quantile(td_bc_single_ptpt$rt, c(0.025, 0.975)) td_bc_single_ptpt <- subset(td_bc_single_ptpt, rt > rt_cutoffs[1] & rt < rt_cutoffs[2]) ddm <- td_ddm(td_bc_single_ptpt, discount_function = 'exponential',               v_par_starts = 0.01,               beta_par_starts = 0.5,               alpha_par_starts = 3.5,               tau_par_starts = 0.9) print(ddm) #>  #> Temporal discounting drift diffusion model #>  #> Discount function: exponential #> Coefficients: #>  #>           k           v        beta       alpha         tau  #> 0.009533540 0.008701496 0.574767840 3.386250993 0.960690451  #>  #> \"none\" transform applied to drift rates. #>  #> ED50: 72.7061725970083 #> AUC: 0.028718092990478 #> BIC: 236.321495807626 plot(ddm, log = 'x', verbose = F, p_lines = c(0.25, 0.75)) predicted_rts <- predict(ddm, type = 'rt') cor.test(predicted_rts, ddm$data$rt) #>  #>  Pearson's product-moment correlation #>  #> data:  predicted_rts and ddm$data$rt #> t = 2.6358, df = 64, p-value = 0.01052 #> alternative hypothesis: true correlation is not equal to 0 #> 95 percent confidence interval: #>  0.07670155 0.51588565 #> sample estimates: #>       cor  #> 0.3129251 plot(ddm, type = 'rt', q_lines = c(0.05, 0.95), ylim = c(1, 9)) ddm_sig <- td_ddm(td_bc_single_ptpt, discount_function = 'exponential', drift_transform = 'sigmoid',               v_par_starts = 0.01,               beta_par_starts = 0.5,               alpha_par_starts = 3.5,               tau_par_starts = 0.9) print(BIC(ddm)) #> [1] 236.3215 print(BIC(ddm_sig)) #> [1] 230.0989 plot(ddm_sig, type = 'link')"},{"path":"https://kinleyid.github.io/tempodisco/articles/modeling-binary-choice-data.html","id":"classic-methods","dir":"Articles","previous_headings":"","what":"Classic methods","title":"Modeling binary choice data","text":"binary choice data explicitly designed titrate indifference points (adjusting amount procedure), analysis options. common one scoring method designed Monetary Choice Questionnaire (Kirby, 1999): Although method computes kk values according hyperbolic discount function, principle ’s possible use exponential discount function: Another option use logistic regression method Wileyto et al. (2004), can solve kk value hyperbolic discount function terms regression coefficients:","code":"data(\"td_bc_single_ptpt\") mod <- kirby_score(td_bc_single_ptpt) print(mod) #>  #> Temporal discounting indifference point model #>  #> Discount function: hyperbolic, with coefficients: #>  #>          k  #> 0.02176563  #>  #> ED50: 45.9439876371218 #> AUC: 0.0551987542147013 mod <- kirby_score(td_bc_single_ptpt, discount_function = 'exponential') print(mod) #>  #> Temporal discounting indifference point model #>  #> Discount function: exponential, with coefficients: #>  #>           k  #> 0.008170247  #>  #> ED50: 84.8379742026149 #> AUC: 0.0335100135964859 mod <- wileyto_score(td_bc_single_ptpt) #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred print(mod) #>  #> Temporal discounting binary choice linear model #>  #> Discount function: hyperbolic from model hyperbolic.1, with coefficients: #>  #>          k  #> 0.04372626  #>  #> Call:  glm(formula = fml, family = binomial(link = \"logit\"), data = data) #>  #> Coefficients: #>     .B1      .B2   #> 0.49900  0.02182   #>  #> Degrees of Freedom: 70 Total (i.e. Null);  68 Residual #> Null Deviance:       97.04  #> Residual Deviance: 37.47     AIC: 41.47"},{"path":"https://kinleyid.github.io/tempodisco/articles/modeling-binary-choice-data.html","id":"newer-methods","dir":"Articles","previous_headings":"","what":"Newer methods","title":"Modeling binary choice data","text":"Wileyto et al. (2004) approach turns possible discount functions well: σ−1[⋅]\\sigma^{-1}[\\cdot] logit function, quantile function standard logistic distribution, G−1[⋅]G^{-1}[\\cdot] quantile function standard Gumbel distribution (Kinley et al., 2024) can test select best according Bayesian Information Criterion follows: explore wider range discount functions, can fit nonlinear model calling td_bcnm. full list follows: Several additional arguments can used customize model. example, can use different choice rules—“logistic” choice rule default, “probit” “power” choice rules also available (see Wulff Van den Bos, 2018, explanations ): also possible fit error rate ϵ\\epsilon describes probability participant making response error (see Vincent, 2015). .e.: P(imm)=ϵ+(1−2ϵ)g−1[η]P(\\text{imm}) = \\epsilon + (1 - 2\\epsilon) g^{-1}[\\eta] P(imm)P(\\text{imm}) probability choosing immediate reward, gg link function, η\\eta linear predictor.  can see probability choosing immediate reward doesn’t approach 0 1. Alternatively, might expect participants never choose immediate reward worth 0 never choose delayed reward worth face amount immediate reward (Kinley et al., 2024). can control setting fixed_ends = T, “fixes” endpoints psychometric curve, val_imm = 0 val_imm = val_del, 0 1, respectively:","code":"mod <- td_bclm(td_bc_single_ptpt, model = 'all') #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred print(mod) #>  #> Temporal discounting binary choice linear model #>  #> Discount function: exponential from model exponential.2, with coefficients: #>  #>          k  #> 0.01003216  #>  #> Call:  glm(formula = fml, family = binomial(link = \"logit\"), data = data) #>  #> Coefficients: #>     .B1      .B2   #>   3.597  -16.553   #>  #> Degrees of Freedom: 70 Total (i.e. Null);  68 Residual #> Null Deviance:       97.04  #> Residual Deviance: 15.7  AIC: 19.7 mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'all') print(mod) #>  #> Temporal discounting binary choice model #>  #> Discount function: exponential, with coefficients: #>  #>          k      gamma  #> 0.01083049 0.09341821  #>  #> Config: #>  noise_dist: logis #>  gamma_scale: linear #>  transform: identity #>  #> ED50: 63.9996305466619 #> AUC: 0.0252791100912786 #> BIC: 25.9537097154224 # Probit choice rule: mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'exponential', choice_rule = 'probit') # Power choice rule: mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'exponential', choice_rule = 'power') data(\"td_bc_study\") # Select the second participant second_ptpt <- unique(td_bc_study$id)[2] df <- subset(td_bc_study, id == second_ptpt) mod <- td_bcnm(df, discount_function = 'exponential', fit_err_rate = T) plot(mod, type = 'endpoints', verbose = F) lines(c(0, 1), c(0, 0), lty = 2) lines(c(0, 1), c(1, 1), lty = 2) mod <- td_bcnm(df, discount_function = 'exponential', fixed_ends = T) plot(mod, type = 'endpoints', verbose = F)"},{"path":"https://kinleyid.github.io/tempodisco/articles/tempodisco.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Getting started","text":"tempodisco includes several example datasets. load one example simulated “adjusting amounts” procedure (Frye et al., 2016), one procedure choices structured according procedure. dataset, rows containing values immediate delayed rewards, delay delayed reward, whether immediate reward chosen. use functions tempodisco, data need columns named way.","code":"data(\"adj_amt_sim\") # Load simulated choice data from an adjusting amounts procedure head(adj_amt_sim) #>   del val_del val_imm imm_chosen trial_idx #> 1   7     800     400      FALSE         1 #> 2   7     800     600      FALSE         2 #> 3   7     800     700      FALSE         3 #> 4   7     800     750      FALSE         4 #> 5   7     800     775      FALSE         5 #> 6  30     800     400      FALSE         6 data(\"td_bc_single_ptpt\") # Load choice data from a non-adjusting-amounts experiment head(td_bc_single_ptpt) #>                                   id val_imm val_del       del imm_chosen    rt #> 1 61dcacaa5ed72-dd-61dcb234e8a1c.txt     112     187   30.4167      FALSE 5.435 #> 2 61dcacaa5ed72-dd-61dcb234e8a1c.txt      50     187   30.4167      FALSE 1.913 #> 3 61dcacaa5ed72-dd-61dcb234e8a1c.txt      37     186 3652.5000       TRUE 2.931 #> 4 61dcacaa5ed72-dd-61dcb234e8a1c.txt      28     211  182.5000      FALSE 7.639 #> 5 61dcacaa5ed72-dd-61dcb234e8a1c.txt      53     197  182.5000       TRUE 2.129 #> 6 61dcacaa5ed72-dd-61dcb234e8a1c.txt      98     184  730.5000       TRUE 1.569"},{"path":"https://kinleyid.github.io/tempodisco/articles/tempodisco.html","id":"computing-indifference-points","dir":"Articles","previous_headings":"","what":"Computing indifference points","title":"Getting started","text":"adjusting amounts data, can use adj_amt_indiffs function compute indifference points delay: non-adjusting-amounts data, can use form logistic regression models indifference point point participant 50% estimated probability selecting immediate delayed reward:","code":"indiff_data <- adj_amt_indiffs(adj_amt_sim) head(indiff_data) #>   del   indiff #> 1   7 0.984375 #> 2  30 0.859375 #> 3  90 0.046875 #> 4 180 0.453125 #> 5 360 0.015625 indiff_mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'model-free') plot(indiff_mod, verbose = F)"},{"path":"https://kinleyid.github.io/tempodisco/articles/tempodisco.html","id":"data-quality-checks","dir":"Articles","previous_headings":"","what":"Data quality checks","title":"Getting started","text":"can test non-systematic discounting per criteria Johnson & Bickel (2008) using nonsys function:","code":"print(nonsys(indiff_data)) # Fails criterion 1 (monotonicity) #>    C1    C2  #>  TRUE FALSE print(nonsys(indiff_mod)) #>    C1    C2  #> FALSE FALSE"},{"path":"https://kinleyid.github.io/tempodisco/articles/tempodisco.html","id":"measuring-discounting","dir":"Articles","previous_headings":"","what":"Measuring discounting","title":"Getting started","text":"quantify discounting given set indifference points, can use “area curve” measure (Myerson et al., 2001). lower measure , steeper individual’s delay discounting.","code":"AUC(indiff_data) #> [1] 0.3333984 AUC(indiff_mod) #> [1] 0.03146756"},{"path":"https://kinleyid.github.io/tempodisco/articles/tempodisco.html","id":"fitting-discount-functions","dir":"Articles","previous_headings":"","what":"Fitting discount functions","title":"Getting started","text":"Fitting discount function set indifference points can done using td_ipm function:  contrast, fitting discount function choice-level data involves form logistic regression , , indifference points (determined discount function) points individual 50% estimated probability selecting immediate vs delayed reward.  , can extract kk values best-fitting hyperbolic discount curves participant use measure discounting (higher kk means steeper discounting).","code":"hyperbolic_mod <- td_ipm(indiff_data, discount_function = 'hyperbolic') plot(hyperbolic_mod) coef(hyperbolic_mod) #>          k  #> 0.01767316 hyperbolic_mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'hyperbolic') plot(hyperbolic_mod, verbose = F) coef(hyperbolic_mod) #>          k      gamma  #> 0.01728009 0.06758106"},{"path":"https://kinleyid.github.io/tempodisco/articles/visualizing-models.html","id":"summary-plots","dir":"Articles","previous_headings":"","what":"\"summary\" plots","title":"Visualizing models","text":"binary choice model, “summary” plot displays binary choices discount curve:  plotting function prints info, telling us plotting discount curve corresponding average delayed reward value data used fitting model. relevant discount curve depends delayed reward value (.e., magnitude effects accounted ). case magnitude effect accounted , can suppress message using verbose = F. can also log-transform x-axis achieve even spread delays:  Additionally, can plot information stochastic individual’s decision making . discount curve shows probability selecting immediate reward predicted 50%, can plot curves probabilities well. example, can show probability selecting immediate reward 10% 90% setting p_lines = c(0.1, 0.9). stochastic decision makers, greater separation (note confidence interval discount curve ):  indifference point model, discount function usually plotted alongside empirical indifference points:  exception indifference point model produced Kirby scoring, applies binary choice data. case, binary choices displayed.  However, indifference point models don’t explicitly model probabilities individual choices, plot types applicable .","code":"data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'hyperbolic') plot(mod, type = 'summary') #> Plotting indifference curve for val_del = 198.314285714286 (mean of val_del from data used to fit model). Override this behaviour by setting the `val_del` argument to plot() or set verbose = F to suppress this message. plot(mod, type = 'summary', verbose = F, log = 'x') plot(mod, type = 'summary', verbose = F, log = 'x', p_lines = c(0.1, 0.9)) data(\"td_ip_simulated_ptpt\") mod_ip <- td_ipm(td_ip_simulated_ptpt, discount_function = 'hyperbolic') plot(mod_ip, type = 'summary', log = 'x', verbose = F) mod_ip <- kirby_score(td_bc_single_ptpt) plot(mod_ip, type = 'summary', log = 'x', verbose = F)"},{"path":"https://kinleyid.github.io/tempodisco/articles/visualizing-models.html","id":"endpoints-plots","dir":"Articles","previous_headings":"","what":"\"endpoints\" plots","title":"Visualizing models","text":"visualize stochastic decision maker , can set type = 'endpoints'. plots psychometric curve probability selecting immediate reward function value relative delayed reward, (.e., 0 1, “endpoints” plot type named):  time get relevant messages. First, curve centered default (corresponds delay indifference point 0.5). Second, corresponds average delayed reward value data used fitting model. “logistic” choice rule (used default) assumes “sharpness” psychometric curve increases higher reward values. can customize using del val_del arguments:  Note del corresponds one delays data, binary choices corresponding delay included plot points y = 0 y = 1 lines.","code":"plot(mod, type = 'endpoints') #> gamma parameter (steepness of psychometric curve curve) is scaled by val_del. #> Thus, the curve will have different steepness for a different value of val_del. #> Defaulting to val_del = 198.314285714286 (mean of val_del from data used to fit model). #> Use the `val_del` argument to specify a custom value or use verbose = F to suppress this message. #> Setting del = 57.8700610123057 (ED50) to center the curve. #> This can be changed using the `del` argument. del <- sort(unique(mod$data$del))[2] plot(mod, type = 'endpoints', del = del, val_del = 1000)"},{"path":"https://kinleyid.github.io/tempodisco/articles/visualizing-models.html","id":"link-plots","dir":"Articles","previous_headings":"","what":"\"link\" plots","title":"Visualizing models","text":"Finally, can plot probability selecting immediate reward values link function. potentially useful visually detecting outliers.","code":"plot(mod, type = 'link')"},{"path":"https://kinleyid.github.io/tempodisco/articles/visualizing-models.html","id":"rt-plots","dir":"Articles","previous_headings":"","what":"“rt” plots","title":"Visualizing models","text":"drift diffusion models, can create plot reaction times model’s predictions:  , selected also view 90% quantile-based confidence interval around model’s predictions.","code":"ddm <- td_ddm(td_bc_single_ptpt, discount_function = 'exponential',               v_par_starts = 0.01,               beta_par_starts = 0.5,               alpha_par_starts = 3.5,               tau_par_starts = 0.9) plot(ddm, type = 'rt', q_lines = c(0.05, 0.95), legend = T)"},{"path":"https://kinleyid.github.io/tempodisco/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaac Kinley. Author, maintainer.","code":""},{"path":"https://kinleyid.github.io/tempodisco/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kinley , Oluwasola J, Becker S (2023). “Probabilistic models delay discounting: improving plausibility performance.” PsyArXiv. doi:10.31234/osf.io/y2fdh.","code":"@Article{,   title = {Probabilistic models of delay discounting: improving plausibility and performance},   author = {Isaac Kinley and Joseph Oluwasola and Suzanna Becker},   year = {2023},   journal = {PsyArXiv},   doi = {10.31234/osf.io/y2fdh}, }"},{"path":"https://kinleyid.github.io/tempodisco/index.html","id":"tempodisco","dir":"","previous_headings":"","what":"Temporal Discounting Models","title":"Temporal Discounting Models","text":"tempodisco R package behavioural researchers working delay discounting data (also known temporal discounting intertemporal choice data). implements common tasks scoring responses (e.g. computing indifference points adjusting amounts procedure, computing “area curve”, computing kk values Monetary Choice Questionnaire; Frye et al., 2016; Myerson et al., 2001; Kirby et al., 1999), identifying poor-quality data (e.g. failed attention checks non-systematic responding; Johnson & Bickel, 2008), modelling choice data using multiple discount functions (e.g. hyperbolic, exponential, etc.—see ; Franck et al., 2015), modelling reaction times using drift diffusion models (Peters & D’Esposito, 2020).","code":""},{"path":"https://kinleyid.github.io/tempodisco/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Temporal Discounting Models","text":"can install tempodisco GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"kinleyid/tempodisco\")"},{"path":"https://kinleyid.github.io/tempodisco/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Temporal Discounting Models","text":"See getting started example usage.","code":""},{"path":"https://kinleyid.github.io/tempodisco/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Temporal Discounting Models","text":"good practice delay discounting research assume discount function describes every individual (Franck et al., 2015). tempodisco implements following discount functions can automatically select best one given individual according Bayesian information criterion (Schwartz, 1978): discount functions can fit indifference point data (see td_ipm), choice-level data (see td_bcnm), reaction time data (see td_ddm). fitting model, can check see well matches data using plot() function:  See “Visualizing models” examples.","code":"library(tempodisco) data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = c('hyperbolic', 'exponential')) plot(mod, p_lines = c(0.1, 0.9), log = 'x', verbose = F)"},{"path":"https://kinleyid.github.io/tempodisco/index.html","id":"reporting-issues-and-requesting-features","dir":"","previous_headings":"","what":"Reporting issues and requesting features","title":"Temporal Discounting Models","text":"encounter problems software like additional functionality, please open new issue GitHub repository. Try include much detail possible, especially reproduce errors/incorrect results. GitHub instructions opening issue .","code":""},{"path":"https://kinleyid.github.io/tempodisco/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Temporal Discounting Models","text":"like contribute tempodisco, ’re welcome! Please follow instructions contribute project GitHub. Feel free contact ’d like help contributions.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/AUC.html","id":null,"dir":"Reference","previous_headings":"","what":"Area under the curve (AUC) — AUC","title":"Area under the curve (AUC) — AUC","text":"Compute either model-based model-free area curve.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/AUC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Area under the curve (AUC) — AUC","text":"","code":"AUC(   obj,   min_del = 0,   max_del = NULL,   val_del = NULL,   del_transform = c(\"none\", \"log\", \"ordinal-scaling\"),   ... )"},{"path":"https://kinleyid.github.io/tempodisco/reference/AUC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Area under the curve (AUC) — AUC","text":"obj temporal discounting model dataframe columns indiff (indifference point) del (delay). min_del Lower limit use integration. Defaults 0. max_del Upper limit use integration. Defaults maximum delay data. val_del Delayed value use computing indifference curve, applicable. Defaults average del_val data. del_transform String specifying transformation apply delays (e.g., log10 + 1 transform ordinal scaling transform; Borges et al., 2016, doi:10.1002/jeab.219 ). Default transform. ... arguments passed `integrate()`.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/AUC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Area under the curve (AUC) — AUC","text":"AUC value.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/AUC.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Area under the curve (AUC) — AUC","text":"indifference point 1 assumed delay 0.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/AUC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Area under the curve (AUC) — AUC","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt) print(AUC(mod)) data(\"td_ip_simulated_ptpt\") } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/ED50.html","id":null,"dir":"Reference","previous_headings":"","what":"Median effective delay — ED50","title":"Median effective delay — ED50","text":"Compute median effective delay.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/ED50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median effective delay — ED50","text":"","code":"ED50(mod, val_del = NULL)"},{"path":"https://kinleyid.github.io/tempodisco/reference/ED50.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median effective delay — ED50","text":"mod temporal discounting model. val_del Delayed value, applicable (.e., magnitude effects accounted ).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/ED50.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median effective delay — ED50","text":"vector predictions.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/ED50.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median effective delay — ED50","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt) print(ED50(mod)) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_indiffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Indifference points from adjusting amount procedure — adj_amt_indiffs","title":"Indifference points from adjusting amount procedure — adj_amt_indiffs","text":"Compute indifference points data adjusting amount procedure (also called \"titrating procedure\").","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_indiffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indifference points from adjusting amount procedure — adj_amt_indiffs","text":"","code":"adj_amt_indiffs(data, block_indic = \"del\", order_indic = NULL)"},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_indiffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indifference points from adjusting amount procedure — adj_amt_indiffs","text":"data dataframe row corresponds binary choice, least columns val_imm, val_del, imm_chosen, along block indicator (applicable) order indicator. block_indic Column name block indicator—.e., column identify block trials indifference point computed. unspecified, defaults 'del', assumes block corresponds different delay. order_indic Column name order indicator—.e., column specifies order trials completed. Sorting column within block sort rows chronological order. unspecified, rows assumed already chronological order.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_indiffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Indifference points from adjusting amount procedure — adj_amt_indiffs","text":"dataframe two columns: one block indicator another corresponding indifference point.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_indiffs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indifference points from adjusting amount procedure — adj_amt_indiffs","text":"","code":"if (FALSE) { # \\dontrun{ data(\"adj_amt_sim\") adj_amt_indiffs(adj_amt_sim) adj_amt_indiffs(adj_amt_sim, block_indic = 'del', order_indic = 'trial_idx') } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_sim.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated adjusting amount procedure — adj_amt_sim","title":"Simulated adjusting amount procedure — adj_amt_sim","text":"minimal example data single participant adjusting amount procedure.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/adj_amt_sim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulated adjusting amount procedure — adj_amt_sim","text":"Isaac Kinley isaac.kinley@gmail.com","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/attention_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for failed attention checks — attention_checks","title":"Test for failed attention checks — attention_checks","text":"Check whether participants failed attention checks, either choosing immediate reward 0 choosing delayed reward equal face value immediate reward. participant never offered either choice, warning given.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/attention_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for failed attention checks — attention_checks","text":"","code":"attention_checks(data, warn = F, ppn = F)"},{"path":"https://kinleyid.github.io/tempodisco/reference/attention_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for failed attention checks — attention_checks","text":"data data.frame columns val_imm, val_del del_chosen, representing data single participant. warn Logical: give warning failed attention checks? ppn Logical: return proportions attention checks participant failed, versus absolute numbers?","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/attention_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for failed attention checks — attention_checks","text":"Named vector counting number times participant chose immediate reward 0 (imm_0) chose delayed reward equal face value immediate reward (del_eq_imm).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/attention_checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for failed attention checks — attention_checks","text":"","code":"if (FALSE) { # \\dontrun{ # On a model data(\"td_bc_single_ptpt\") attention_checks(td_bc_single_ptpt) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bclm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients — coef.td_bclm","title":"Extract model coefficients — coef.td_bclm","text":"Get coefficients temporal discounting binary choice linear model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bclm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients — coef.td_bclm","text":"","code":"# S3 method for class 'td_bclm' coef(object, df_par = TRUE, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bclm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients — coef.td_bclm","text":"object object class td_bcnm. df_par Boolean specifying whether coefficients returned parameters discount function (versus beta parameters regression). ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bclm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model coefficients — coef.td_bclm","text":"named vector coefficients.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients — coef.td_bcnm","title":"Extract model coefficients — coef.td_bcnm","text":"Get coefficients temporal discounting binary choice nonlinear model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients — coef.td_bcnm","text":"","code":"# S3 method for class 'td_bcnm' coef(object, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients — coef.td_bcnm","text":"object object class td_bcnm. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_bcnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model coefficients — coef.td_bcnm","text":"named vector coefficients.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients — coef.td_ddm","title":"Extract model coefficients — coef.td_ddm","text":"Get coefficients temporal discounting drift diffusion model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients — coef.td_ddm","text":"","code":"# S3 method for class 'td_ddm' coef(object, type = \"all\", ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients — coef.td_ddm","text":"object object class td_ddm. type string specifying coefficients extract. '' extracts , 'ddm' extracts DDM-specific parameters, 'df' extracts discount function parameters. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ddm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model coefficients — coef.td_ddm","text":"named vector coefficients.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract model coefficients — coef.td_ipm","title":"Extract model coefficients — coef.td_ipm","text":"Get coefficients temporal discounting indifference point model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract model coefficients — coef.td_ipm","text":"","code":"# S3 method for class 'td_ipm' coef(object, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract model coefficients — coef.td_ipm","text":"object object class td_ipm ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/coef.td_ipm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract model coefficients — coef.td_ipm","text":"named vector coefficients.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/deviance.td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model deviance — deviance.td_bcnm","title":"Model deviance — deviance.td_bcnm","text":"Compute deviance temporal discounting binary choice model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/deviance.td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model deviance — deviance.td_bcnm","text":"","code":"# S3 method for class 'td_bcnm' deviance(mod, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/deviance.td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model deviance — deviance.td_bcnm","text":"mod object class td_bcnm. ... Additional arguments currently used.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/deviance.td_ddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model deviance — deviance.td_ddm","title":"Model deviance — deviance.td_ddm","text":"Compute deviance temporal discounting drift diffusion model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/deviance.td_ddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model deviance — deviance.td_ddm","text":"","code":"# S3 method for class 'td_ddm' deviance(mod, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/deviance.td_ddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model deviance — deviance.td_ddm","text":"mod object class td_ddm. ... Additional arguments currently used.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/discount_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Get discount function from model — discount_function","title":"Get discount function from model — discount_function","text":"Access name discount function model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/discount_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get discount function from model — discount_function","text":"","code":"discount_function(mod)"},{"path":"https://kinleyid.github.io/tempodisco/reference/discount_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get discount function from model — discount_function","text":"mod temporal discounting model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/discount_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get discount function from model — discount_function","text":"name discount function.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/discount_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get discount function from model — discount_function","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt) discount_function(mod) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fitted values — fitted.td_bcnm","title":"Get fitted values — fitted.td_bcnm","text":"Get fitted values temporal discounting binary choice model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fitted values — fitted.td_bcnm","text":"","code":"# S3 method for class 'td_bcnm' fitted(object, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fitted values — fitted.td_bcnm","text":"object object class td_bcnm. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_bcnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fitted values — fitted.td_bcnm","text":"named vector fitted values.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fitted values — fitted.td_ddm","title":"Get fitted values — fitted.td_ddm","text":"Get fitted values temporal discounting drift diffusion model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fitted values — fitted.td_ddm","text":"","code":"# S3 method for class 'td_ddm' fitted(object, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fitted values — fitted.td_ddm","text":"object object class td_ddm. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ddm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fitted values — fitted.td_ddm","text":"named vector fitted values.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fitted values — fitted.td_ipm","title":"Get fitted values — fitted.td_ipm","text":"Get fitted values temporal discounting indifference point model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fitted values — fitted.td_ipm","text":"","code":"# S3 method for class 'td_ipm' fitted(object, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fitted values — fitted.td_ipm","text":"object object class td_ipm. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/fitted.td_ipm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fitted values — fitted.td_ipm","text":"named vector fitted values.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/indiffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model-free indifference points — indiffs","title":"Get model-free indifference points — indiffs","text":"Convert temporal discounting model \"model-free\" discount function dataframe indifference points.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/indiffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model-free indifference points — indiffs","text":"","code":"indiffs(mod)"},{"path":"https://kinleyid.github.io/tempodisco/reference/indiffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model-free indifference points — indiffs","text":"mod model class td_bcnm, td_ipm, td_ddm \"model-free\" discount function fit.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/indiffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model-free indifference points — indiffs","text":"dataframe columns del (delay) indiff (indifference point).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/indiffs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get model-free indifference points — indiffs","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'model-free') indiff_data <- indiffs(mod) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/invariance_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for invariant responding — invariance_checks","title":"Check for invariant responding — invariance_checks","text":"Check whether participants always chose immediate reward always chose delayed reward.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/invariance_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for invariant responding — invariance_checks","text":"","code":"invariance_checks(data, warn = F)"},{"path":"https://kinleyid.github.io/tempodisco/reference/invariance_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for invariant responding — invariance_checks","text":"data data.frame columns val_imm, val_del del_chosen, representing data single participant. warn Logical: give warning invariant responding?","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/invariance_checks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for invariant responding — invariance_checks","text":"Named vector specifying whether participant chose immediate rewards (all_imm) chose delayed rewards (all_del).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/invariance_checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for invariant responding — invariance_checks","text":"","code":"if (FALSE) { # \\dontrun{ # On a model data(\"td_bc_single_ptpt\") attention_checks(td_bc_single_ptpt) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_consistency.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute consistency score — kirby_consistency","title":"Compute consistency score — kirby_consistency","text":"Compute consistency score per method Kirby et al. (1999, doi:10.1037//0096-3445.128.1.78 ). described detail Kaplan et al. (2016, doi:10.1007/s40614-016-0070-9 ), suggested consistency score 0.75 might sign inattentive responding.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_consistency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute consistency score — kirby_consistency","text":"","code":"kirby_consistency(data, discount_function = c(\"hyperbolic\", \"exponential\"))"},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_consistency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute consistency score — kirby_consistency","text":"data Responses score. discount_function \\(k\\) values computed according hyperbolic exponential discount function? original method uses hyperbolic, principle exponential also possible.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_consistency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute consistency score — kirby_consistency","text":"consistency score 0 1.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_consistency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute consistency score — kirby_consistency","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- kirby_consistency(td_bc_single_ptpt) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Kirby MCQ-style scoring — kirby_score","title":"Kirby MCQ-style scoring — kirby_score","text":"Score set responses according method Kirby et al. (1999, doi:10.1037//0096-3445.128.1.78 ). described detail Kaplan et al. (2016, doi:10.1007/s40614-016-0070-9 ).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kirby MCQ-style scoring — kirby_score","text":"","code":"kirby_score(data, discount_function = c(\"hyperbolic\", \"exponential\"))"},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kirby MCQ-style scoring — kirby_score","text":"data Responses score. discount_function \\(k\\) values computed according hyperbolic exponential discount function? original method uses hyperbolic, principle exponential also possible.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kirby MCQ-style scoring — kirby_score","text":"object class td_ipm.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/kirby_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kirby MCQ-style scoring — kirby_score","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- kirby_score(td_bc_single_ptpt) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract log-likelihood — logLik.td_bcnm","title":"Extract log-likelihood — logLik.td_bcnm","text":"Compute log-likelihood temporal discounting binary choice nonlinear model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract log-likelihood — logLik.td_bcnm","text":"","code":"# S3 method for class 'td_bcnm' logLik(mod, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract log-likelihood — logLik.td_bcnm","text":"mod object class td_bcnm ... Additional arguments currently used.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_ddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract log-likelihood — logLik.td_ddm","title":"Extract log-likelihood — logLik.td_ddm","text":"Compute log-likelihood temporal discounting drift diffusion model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_ddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract log-likelihood — logLik.td_ddm","text":"","code":"# S3 method for class 'td_ddm' logLik(mod, type = c(\"resp_rt\", \"resp\", \"rt\"), ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_ddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract log-likelihood — logLik.td_ddm","text":"mod object class td_bcnm. type probabilities /probability densities computed responses RTs ('resp_rt', default) responses ('resp')? ... Additional arguments currently used.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract log-likelihood — logLik.td_ipm","title":"Extract log-likelihood — logLik.td_ipm","text":"Compute log-likelihood temporal discounting indifference point model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract log-likelihood — logLik.td_ipm","text":"","code":"# S3 method for class 'td_ipm' logLik(mod, ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/logLik.td_ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract log-likelihood — logLik.td_ipm","text":"mod object class td_ipm ... Additional arguments currently used.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/most_consistent_indiffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental method for computing indifference points — most_consistent_indiffs","title":"Experimental method for computing indifference points — most_consistent_indiffs","text":"Experimental method computing indifference points","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/most_consistent_indiffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental method for computing indifference points — most_consistent_indiffs","text":"","code":"most_consistent_indiffs(data)"},{"path":"https://kinleyid.github.io/tempodisco/reference/most_consistent_indiffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experimental method for computing indifference points — most_consistent_indiffs","text":"data Responses score.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/most_consistent_indiffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Experimental method for computing indifference points — most_consistent_indiffs","text":"dataframe two columns: one block indicator another corresponding indifference point.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/nonsys.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for non-systematic discounting — nonsys","title":"Check for non-systematic discounting — nonsys","text":"Check non-systematic discounting, per Johnson & Bickel (2008) criteria. : C1: indifference point can exceed previous 0.2 C2: Last indifference point must lower first least 0.1","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/nonsys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for non-systematic discounting — nonsys","text":"","code":"nonsys(obj)"},{"path":"https://kinleyid.github.io/tempodisco/reference/nonsys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for non-systematic discounting — nonsys","text":"obj Either data.frame columns indiff del, discounting model class td_bcnm td_ipm, fit using \"model-free\" discount function.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/nonsys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for non-systematic discounting — nonsys","text":"Named logical vector specifying whether nonsystematic discounting exhibited according C1/C2.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/nonsys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for non-systematic discounting — nonsys","text":"","code":"if (FALSE) { # \\dontrun{ # On a model data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'model-free') any(nonsys(mod))  # On a dataframe data(\"td_ip_simulated_ptpt\") any(nonsys(td_ip_simulated_ptpt))  # Artificial case of nonsystematic discounting nonsys(data.frame(del = 1:3, indiff = c(0.5, 0.8, 0.6))) # Both TRUE } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/plot.td_um.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot models — plot.td_um","title":"Plot models — plot.td_um","text":"Plot delay discounting models.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/plot.td_um.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot models — plot.td_um","text":"","code":"# S3 method for class 'td_um' plot(   x,   type = c(\"summary\", \"endpoints\", \"link\", \"rt\"),   legend = TRUE,   p_lines = NULL,   p_tol = 0.001,   verbose = TRUE,   del = NULL,   val_del = NULL,   q_lines = c(0.025, 0.975),   ... )"},{"path":"https://kinleyid.github.io/tempodisco/reference/plot.td_um.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot models — plot.td_um","text":"x delay discounting model. See dd_prob_model dd_det_model. type Type plot generate. legend Logical: display legend? relevant type = 'summary' type = 'rt'. p_lines Numerical vector. type = 'summary' discount curve, probability selecting immediate reward 0.5, plotted. p_lines allows specify probabilities similar curves plotted (applicable probabilistic models, e.g. td_bcnm, td_bclm td_ddm). p_tol p_lines NULL, maximum distance estimated probabilities can true values? Smaller values results slower plot generation. verbose Whether print info , e.g., setting del = ED50 type = 'endpoints'. del Plots data particular delay. val_del Plots data particular delayed value. q_lines type = 'rt', plot dashed lines quantiles predicted RT distribution? Default 0.025 0.975 (.e., quantile-based 95% confidence interval). ... Additional arguments plot().","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/plot.td_um.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot models — plot.td_um","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bclm(td_bc_single_ptpt, model = 'hyperbolic.1') plot(mod, type = 'summary', p_lines = c(0.25, 0.75), log = 'x') plot(mod, type = 'endpoints') } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bclm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Predictions — predict.td_bclm","title":"Model Predictions — predict.td_bclm","text":"Generate predictions temporal discounting binary choice linear model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bclm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Predictions — predict.td_bclm","text":"","code":"# S3 method for class 'td_bclm' predict(   object,   newdata = NULL,   type = c(\"indiff\", \"link\", \"response\", \"terms\"),   ... )"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bclm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Predictions — predict.td_bclm","text":"object temporal discounting binary choice linear model. See td_bclm. newdata Optionally, data frame use prediction. omitted, data used fit model used prediction. type type prediction required. 'indiff' (default) gives predicted indifference points. case, newdata needs del column. values (e.g. \"link\", \"response\"), function just wrapper predict.glm(). ... Additional arguments passed predict.glm type != 'indiff'.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bclm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Predictions — predict.td_bclm","text":"vector predictions.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bclm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Predictions — predict.td_bclm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bclm(td_bc_single_ptpt, model = 'hyperbolic.1') indiffs <- predict(mod, newdata = data.frame(del = 1:100), type = 'indiff') } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Predictions — predict.td_bcnm","title":"Model Predictions — predict.td_bcnm","text":"Generate predictions temporal discounting binary choice model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Predictions — predict.td_bcnm","text":"","code":"# S3 method for class 'td_bcnm' predict(object, newdata = NULL, type = c(\"link\", \"response\", \"indiff\"), ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Predictions — predict.td_bcnm","text":"object temporal discounting binary choice model. See td_bcnm. newdata Optionally, data frame use prediction. omitted, data used fit model used prediction. type type prediction required. predict.glm, \"link\" (default) \"response\" give predictions scales linear predictors response variable, respectively. \"indiff\" gives predicted indifference points. predicting indifference points, newdata needs del column. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bcnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Predictions — predict.td_bcnm","text":"vector predictions.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_bcnm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Predictions — predict.td_bcnm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = 'hyperbolic') indiffs <- predict(mod, newdata = data.frame(del = 1:100), type = 'indiff') } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Predictions — predict.td_ddm","title":"Model Predictions — predict.td_ddm","text":"Generate predictions temporal discounting drift diffusion model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Predictions — predict.td_ddm","text":"","code":"# S3 method for class 'td_ddm' predict(   object,   newdata = NULL,   type = c(\"indiff\", \"link\", \"response\", \"rt\"),   ... )"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Predictions — predict.td_ddm","text":"object temporal discounting drift diffusion model. See td_ddm. newdata Optionally, data frame use prediction. omitted, data used fit model used prediction. type type prediction required. predict.glm, \"link\" (default) \"response\" give predictions scales linear predictors response variable, respectively. \"indiff\" gives predicted indifference points. predicting indifference points, newdata needs del column. \"rt\" gives predicted reaction times. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ddm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Predictions — predict.td_ddm","text":"vector predictions.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ddm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Model Predictions — predict.td_ddm","text":"type = 'rt', expected RTs computed irrespective reward selected, per equation 5 Grasman, Wagenmakers, & van der Maas (2009, doi:10.1016/j.jmp.2009.01.006 ).","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ddm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Predictions — predict.td_ddm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_ddm(td_bc_single_ptpt, discount_function = 'exponential') pred_rts <- predict(mod, type = 'rt') } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Predictions — predict.td_ipm","title":"Model Predictions — predict.td_ipm","text":"Generate predictions temporal discounting indifference point model","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Predictions — predict.td_ipm","text":"","code":"# S3 method for class 'td_ipm' predict(object, newdata = NULL, type = c(\"indiff\", \"response\"), ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Predictions — predict.td_ipm","text":"object temporal discounting indifference point model. See td_ipm. newdata data frame use prediction. omitted, data used fit model used prediction. type Type prediction, either 'indiff' (indifference points) 'response' (whether participants predicted choose immediate (1) delayed reward (0)). ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ipm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Predictions — predict.td_ipm","text":"vector predictions.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/predict.td_ipm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Predictions — predict.td_ipm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_ip_simulated_ptpt\") mod <- td_ipm(td_ip_simulated_ptpt, discount_function = 'hyperbolic') indiffs <- predict(mod, del = 1:100) indiffs <- predict(mod, newdata = data.frame(del = 1:100)) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals from temporal discounting model — residuals.td_bcnm","title":"Residuals from temporal discounting model — residuals.td_bcnm","text":"Get residuals temporal discounting binary choice nonlinear model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals from temporal discounting model — residuals.td_bcnm","text":"","code":"# S3 method for class 'td_bcnm' residuals(object, type = c(\"deviance\", \"pearson\", \"response\"), ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals from temporal discounting model — residuals.td_bcnm","text":"object temporal discounting binary choice model. See td_bcnm. type type residuals returned. See residuals.glm. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_bcnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals from temporal discounting model — residuals.td_bcnm","text":"vector residuals.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"Residuals from temporal discounting model — residuals.td_ipm","title":"Residuals from temporal discounting model — residuals.td_ipm","text":"Get residuals temporal discounting indifference point model.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Residuals from temporal discounting model — residuals.td_ipm","text":"","code":"# S3 method for class 'td_ipm' residuals(object, type = c(\"response\", \"pearson\"), ...)"},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Residuals from temporal discounting model — residuals.td_ipm","text":"object temporal discounting model. See td_bcnm. type type residuals returned. See residuals.nls. ... Additional arguments currently used.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/residuals.td_ipm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Residuals from temporal discounting model — residuals.td_ipm","text":"vector residuals.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bc_single_ptpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary choice data for a single participant — td_bc_single_ptpt","title":"Binary choice data for a single participant — td_bc_single_ptpt","text":"70 binary choices made single participant. Along columns required td_bcnm, reaction time (rt) recorded.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bc_single_ptpt.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binary choice data for a single participant — td_bc_single_ptpt","text":"doi.org/10.31234/osf.io/y2fdh","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bc_single_ptpt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Binary choice data for a single participant — td_bc_single_ptpt","text":"Isaac Kinley isaac.kinley@gmail.com","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bc_study.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary choice data for a study — td_bc_study","title":"Binary choice data for a study — td_bc_study","text":"Data 421 participants, made 70 binary choices. Along columns required td_bcnm, reaction time (rt) seconds recorded. Participants identified alphnumeric code id column.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bc_study.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Binary choice data for a study — td_bc_study","text":"doi.org/10.31234/osf.io/y2fdh","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bc_study.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Binary choice data for a study — td_bc_study","text":"Isaac Kinley isaac.kinley@gmail.com","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bclm.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal discounting binary choice linear model — td_bclm","title":"Temporal discounting binary choice linear model — td_bclm","text":"Compute binary choice linear model single subject. models, can recover parameters discount function weights standard logistic regression. \\(\\beta_1\\)","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bclm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal discounting binary choice linear model — td_bclm","text":"","code":"td_bclm(   data,   model = c(\"all\", \"hyperbolic.1\", \"hyperbolic.2\", \"exponential.1\", \"exponential.2\",     \"scaled-exponential\", \"nonlinear-time-hyperbolic\", \"power\",     \"nonlinear-time-exponential\"),   ... )"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bclm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal discounting binary choice linear model — td_bclm","text":"data data frame columns val_imm val_del values immediate delayed rewards, del delay, imm_chosen (Boolean) whether immediate reward chosen. columns can also present ignored. model string specifying model use. list models' linear predictors means can recover discount function parameters. 'hyperbolic.1': \\(\\beta_1(1 - v_D/v_I) + \\beta_2 t\\); \\(k = \\beta_2/\\beta_1\\) 'hyperbolic.2': \\(\\beta_1(\\sigma^{-1}[v_I/v_D] + \\log t) + \\beta_2\\); \\(k = \\exp[\\beta_2/\\beta_1]\\) 'exponential.1': \\(\\beta_1 \\log (v_I/v_D) + \\beta_2 t\\); \\(k = \\beta_2/\\beta_1\\) 'exponential.2': \\(\\beta_1(G^{-1}[v_I/v_D] + \\log t) + \\beta_2\\); \\(k = \\exp[\\beta_2/\\beta_1]\\) 'scaled-exponential': \\(\\beta_1 \\log (v_I/v_D) + \\beta_2 t + \\beta_3\\); \\(k = \\beta_2/\\beta_1\\), \\(w = \\exp[-\\beta_3/\\beta_1]\\) 'nonlinear-time-hyperbolic': \\(\\beta_1(\\sigma^{-1}[v_I/v_D]) + \\beta_2\\log t + \\beta_3\\); \\(k = \\exp[\\beta_3/\\beta_1]\\), \\(s = \\beta_2/\\beta_1\\) 'nonlinear-time-hyperbolic': \\(\\beta_1(G^{-1}[v_I/v_D]) + \\beta_2\\log t + \\beta_3\\); \\(k = \\exp[\\beta_3/\\beta_1]\\), \\(s = \\beta_2/\\beta_1\\)  \\(\\sigma^{-1}[\\cdot]\\) quantile function standard logistic distribution \\(G^{-1}[\\cdot]\\) quantile function standard Gumbel distribution. ... Additional arguments passed glm.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bclm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal discounting binary choice linear model — td_bclm","text":"object class td_bclm, nearly identical glm additional config component.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bclm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal discounting binary choice linear model — td_bclm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bclm(td_bc_single_ptpt, model = 'hyperbolic.1') print(coef(mod)) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bcnm.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal discounting binary choice nonlinear model — td_bcnm","title":"Temporal discounting binary choice nonlinear model — td_bcnm","text":"Compute binary choice model single subject","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bcnm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal discounting binary choice nonlinear model — td_bcnm","text":"","code":"td_bcnm(   data,   discount_function = \"all\",   choice_rule = c(\"logistic\", \"probit\", \"power\"),   fixed_ends = F,   fit_err_rate = F,   gamma_par_starts = c(0.01, 1, 100),   eps_par_starts = c(0.01, 0.25),   silent = T,   optim_args = list(),   ... )"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bcnm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal discounting binary choice nonlinear model — td_bcnm","text":"data data frame columns val_imm val_del values immediate delayed rewards, del delay, imm_chosen (Boolean) whether immediate reward chosen. columns can also present ignored. discount_function string specifying name discount functions use, object class td_fn (used creating custom discount functions), list objects class td_fn. choice_rule string specifying whether 'logistic' (default), 'probit', 'power' choice rule used. fixed_ends Boolean (false default) specifying whether model satisfy desiderata subjects always prefer something nothing (.e., nonzero delayed reward nothing) reward sooner rather later. fit_err_rate Boolean (false default) specifying whether model include error rate (parameterized \"eps\"). See Eq. 5 : https://doi.org/10.3758/s13428-015-0672-2. gamma_par_starts vector starting values try \"gamma\" parameter (controls steepness choice rule) optimization. eps_par_starts vector starting values try \"eps\" parameter (controls error rate) optimization. Ignored `fit_err_rate = FALSE`. silent Boolean (true default). call optim() occurs within try() wrapper. value silent passed along try(). optim_args Additional arguments pass optim(). Default list(silent = T). ... Additional arguments provide finer-grained control model configuration.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bcnm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal discounting binary choice nonlinear model — td_bcnm","text":"object class td_bcnm components data (containing data used fitting), config (containing internal configuration model, including discount_function), optim (output optim()).","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/td_bcnm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal discounting binary choice nonlinear model — td_bcnm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = \"hyperbolic\", fixed_ends = T) # Custom discount function custom_discount_function <- td_fn(   name = 'custom',   fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],   par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),   par_lims = list(k = c(0, Inf), b = c(0, 1)),   ED50 = function(...) 'non-analytic' ) mod <- td_bcnm(td_bc_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ddm.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal discounting drift diffusion model — td_ddm","title":"Temporal discounting drift diffusion model — td_ddm","text":"Fit drift diffusion model single subject using maximum likelihood estimation.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ddm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal discounting drift diffusion model — td_ddm","text":"","code":"td_ddm(   data,   discount_function,   v_par_starts = c(0.01, 0.1, 1),   beta_par_starts = c(0.25, 0.5, 0.75),   alpha_par_starts = c(0.5, 1, 10),   tau_par_starts = c(0.2, 0.8),   drift_transform = c(\"none\", \"sigmoid\", \"bias-correct\"),   silent = T,   optim_args = list() )"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ddm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal discounting drift diffusion model — td_ddm","text":"data data frame columns val_imm val_del values immediate delayed rewards, del delays, imm_chosen (Boolean) whether immediate rewards chosen, rt reaction times (seconds). columns can also present ignored. discount_function string specifying name discount functions use, object class td_fn (used creating custom discount functions), list objects class td_fn. v_par_starts vector starting values try \"v\" parameter (drift rate multiplier) optimization. beta_par_starts vector starting values try \"beta\" parameter (bias) optimization. alpha_par_starts vector starting values try \"alpha\" parameter (boundary separation) optimization. tau_par_starts vector starting values try \"tau\" parameter (non-decision time) optimization. drift_transform transform apply drift rates. Either \"none\" (transform), \"sigmoid\" (sigmoidal transform described Peters & D'Esposito, 2020, doi:10.1371/journal.pcbi.1007615 , Fontanesi et al., 2019, doi:10.3758/s13423-018-1554-2 ), \"bias-correct\" (experimental; see note ). silent Boolean (true default). call optim() occurs within try() wrapper. value silent passed along try(). optim_args Additional arguments pass optim(). Default list(silent = T).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ddm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal discounting drift diffusion model — td_ddm","text":"object class td_bcnm components data (containing data used fitting), config (containing internal configuration model, including discount_function), optim (output optim()).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ddm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Temporal discounting drift diffusion model — td_ddm","text":"Drift rates computed based difference subjective values immediate delayed rewards. theory, equally valued, equal probability chosen. However, true bias parameter drift diffusion model (beta) 0.5 (.e., bias). make sure immediate delayed reward equal probability chosen equally valued, can set drift_transform = \"bias-correct\" add bias correction factor drift rate. However, feature experimental effects model fit etc. tested.","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ddm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal discounting drift diffusion model — td_ddm","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_ddm(td_bc_single_ptpt, discount_function = \"hyperbolic\") } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Predefined or custom discount function — td_fn","title":"Predefined or custom discount function — td_fn","text":"Get predefined discount function create custom discount function.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predefined or custom discount function — td_fn","text":"","code":"td_fn(   predefined = c(\"hyperbolic\", \"exponential\", \"power\", \"inverse-q-exponential\",     \"nonlinear-time-hyperbolic\", \"scaled-exponential\", \"dual-systems-exponential\",     \"nonlinear-time-exponential\", \"model-free\", \"constant\"),   name = \"unnamed\",   fn = NULL,   par_starts = NULL,   par_lims = NULL,   init = NULL,   ED50 = NULL,   par_chk = NULL )"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predefined or custom discount function — td_fn","text":"predefined string specifying one pre-defined discount functions. name Name custom discount function. fn Function takes data.frame called data (expected contain column del delays) vector named parameters called p, returns vector values 0 1 representing indifference points computed given delay. par_starts named list vectors, specifying possible starting values parameter try running optimization. par_lims named list vectors, specifying bounds impose parameters. parameter bounds unspecified assumed unbounded. init function initialize td_fn object. take 2 arguments: \"self\" (td_fn object initialized) \"data\" (data used initialization). ED50 function , given named vector parameters p optionally value del_val, computes ED50. closed-form solution, return string \"non-analytic\". ED50 well-defined, return string \"none\". shortcut latter 2 cases, strings \"non-analytic\" \"none\" can directly supplied arguments. par_chk Optionally, function checks parameters ensure meet criteria. E.g., dual-systems-exponential discount function, require k1 < k2.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predefined or custom discount function — td_fn","text":"object class `td_fn`.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predefined or custom discount function — td_fn","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- td_bcnm(td_bc_single_ptpt, discount_function = \"hyperbolic\", fixed_ends = T) # Custom discount function custom_discount_function <- td_fn(   name = 'custom',   fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],   par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),   par_lims = list(k = c(0, Inf), b = c(0, 1)),   ED50 = 'non-analytic' ) mod <- td_bcnm(td_bc_single_ptpt, discount_function = custom_discount_function, fit_err_rate = T) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ip_simulated_ptpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated indifference point data for a single participant — td_ip_simulated_ptpt","title":"Simulated indifference point data for a single participant — td_ip_simulated_ptpt","text":"dataframe containing simulated indifference points single participant exhibiting approximately hyperbolic discounting.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ip_simulated_ptpt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulated indifference point data for a single participant — td_ip_simulated_ptpt","text":"Isaac Kinley isaac.kinley@gmail.com","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ipm.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal discounting indifference point model — td_ipm","title":"Temporal discounting indifference point model — td_ipm","text":"Compute model single subject's indifference points.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ipm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal discounting indifference point model — td_ipm","text":"","code":"td_ipm(   data,   discount_function = c(\"all\", \"hyperbolic\", \"exponential\", \"inverse-q-exponential\",     \"nonlinear-time-hyperbolic\", \"scaled-exponential\", \"dual-systems-exponential\",     \"nonlinear-time-exponential\", \"model-free\", \"constant\"),   optim_args = list(),   silent = T )"},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ipm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal discounting indifference point model — td_ipm","text":"data data frame columns indiff pre-computed indifference points del delay. discount_function vector strings specifying name discount functions use, object class td_fn (used creating custom discount functions), list objects class td_fn. optim_args list additional args pass optim. silent Boolean specifying whether call optim (occurs try block) silent error.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ipm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal discounting indifference point model — td_ipm","text":"object class td_ipm components data (containing data used fitting), config (containing internal configuration model, including discount_function), optim (output optim()).","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/td_ipm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temporal discounting indifference point model — td_ipm","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage data(\"td_ip_simulated_ptpt\") mod <- td_ipm(td_ip_simulated_ptpt, discount_function = \"hyperbolic\") # Custom discount function custom_discount_function <- td_fn(   name = 'custom',   fn = function(data, p) (1 - p['b'])*exp(-p['k']*data$del) + p['b'],   par_starts = list(k = c(0.001, 0.1), b = c(0.001, 0.1)),   par_lims = list(k = c(0, Inf), b = c(0, 1)),   ED50 = function(p) 'non-analytic' ) mod <- td_ipm(td_ip_simulated_ptpt, discount_function = custom_discount_function) } # }"},{"path":"https://kinleyid.github.io/tempodisco/reference/tempodisco-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tempodisco: Temporal Discounting Models — tempodisco-package","title":"tempodisco: Temporal Discounting Models — tempodisco-package","text":"Tools working temporal discounting data, designed behavioural researchers simplify data cleaning/scoring model fitting. package implements widely used methods computing indifference points adjusting amount task (Frye et al., 2016, doi:10.3791/53584 ), testing non-systematic discounting per criteria Johnson & Bickel (2008, doi:10.1037/1064-1297.16.3.264 ), scoring questionnaires according methods Kirby et al. (1999, doi:10.1037//0096-3445.128.1.78 ) Wileyto et al (2004, doi:10.3758/BF03195548 ), Bayesian model selection using range discount functions (Franck et al., 2015, doi:10.1002/jeab.128 ), drift diffusion models discounting (Peters & D'Esposito, 2020, doi:10.1371/journal.pcbi.1007615 ), model-agnostic measures discounting area curve (Myerson et al., 2001, doi:10.1901/jeab.2001.76-235 ) ED50 (Yoon & Higgins, 2008, doi:10.1016/j.drugalcdep.2007.12.011 ).","code":""},{"path":[]},{"path":"https://kinleyid.github.io/tempodisco/reference/tempodisco-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tempodisco: Temporal Discounting Models — tempodisco-package","text":"Maintainer: Isaac Kinley isaac.kinley@gmail.com","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/wileyto_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Wileyto score a questionnaire — wileyto_score","title":"Wileyto score a questionnaire — wileyto_score","text":"Score set responses according method Wileyto et al. (2004, doi:10.3758/BF03195548 ). function thin wrapper td_bclm.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/wileyto_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wileyto score a questionnaire — wileyto_score","text":"","code":"wileyto_score(data)"},{"path":"https://kinleyid.github.io/tempodisco/reference/wileyto_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wileyto score a questionnaire — wileyto_score","text":"data Responses score.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/wileyto_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wileyto score a questionnaire — wileyto_score","text":"object class td_bclm.","code":""},{"path":"https://kinleyid.github.io/tempodisco/reference/wileyto_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wileyto score a questionnaire — wileyto_score","text":"","code":"if (FALSE) { # \\dontrun{ data(\"td_bc_single_ptpt\") mod <- wileyto_score(td_bc_single_ptpt) } # }"}]
