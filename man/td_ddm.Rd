% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/td_ddm.R
\name{td_ddm}
\alias{td_ddm}
\title{Temporal discounting drift diffusion model}
\usage{
td_ddm(
  data,
  discount_function,
  gamma_par_starts = c(0.01, 0.1, 1),
  beta_par_starts = c(0.25, 0.5, 0.75),
  alpha_par_starts = c(0.5, 1, 10),
  tau_par_starts = c(0.2, 0.8),
  drift_transform = c("none", "logis"),
  bias_adjust = c(FALSE, TRUE),
  silent = TRUE,
  optim_args = list()
)
}
\arguments{
\item{data}{A data frame with columns \code{val_imm} and \code{val_del} for the values of the immediate and delayed rewards, \code{del} for the delays, \code{imm_chosen} (Boolean) for whether the immediate rewards were chosen, and \code{rt} for the reaction times (in seconds). Other columns can also be present but will be ignored.}

\item{discount_function}{A string specifying the name of the discount functions to use, or an object of class \code{td_fn} (used for creating custom discount functions), or a list of objects of class \code{td_fn}.}

\item{gamma_par_starts}{A vector of starting values to try for the "gamma" parameter (drift rate multiplier or sharpness parameter) during optimization.}

\item{beta_par_starts}{A vector of starting values to try for the "beta" parameter (bias) during optimization.}

\item{alpha_par_starts}{A vector of starting values to try for the "alpha" parameter (boundary separation) during optimization.}

\item{tau_par_starts}{A vector of starting values to try for the "tau" parameter (non-decision time) during optimization.}

\item{drift_transform}{A transform to apply to drift rates. Either \code{"none"} (no transform), \code{"sigmoid"} (sigmoidal transform described by Peters & D'Esposito, 2020, \doi{10.1371/journal.pcbi.1007615}, and Fontanesi et al., 2019, \doi{10.3758/s13423-018-1554-2}), or \code{"bias-correct"} (experimental; see note below).}

\item{silent}{Boolean (true by default). The call to \code{optim()} occurs within a \code{try()} wrapper. The value of \code{silent} is passed along to \code{try()}.}

\item{optim_args}{Additional arguments to pass to \code{optim()}. Default is \code{list(silent = TRUE)}.}
}
\value{
An object of class \code{td_bcnm} with components \code{data} (containing the data used for fitting), \code{config} (containing the internal configuration of the model, including the \code{discount_function}), and \code{optim} (the output of \code{optim()}).
}
\description{
Fit a drift diffusion model for a single subject using maximum likelihood estimation.
}
\note{
Drift rates are computed based on the difference in subjective values between the immediate and delayed rewards. In theory, when they are equally valued, they should have equal probability of being chosen. However, this is only true when the bias parameter of the drift diffusion model (\code{beta}) is 0.5 (i.e., no bias). To make sure the immediate and delayed reward have equal probability of being chosen when they are equally valued, we can set \code{drift_transform = "bias-correct"} to add a bias correction factor to the drift rate. However, this feature is experimental and its effects on model fit etc. have not been tested.
}
\examples{
\donttest{
data("td_bc_single_ptpt")
ddm <- td_ddm(td_bc_single_ptpt, discount_function = 'exponential',
              gamma_par_starts = 0.01,
              beta_par_starts = 0.5,
              alpha_par_starts = 3.5,
              tau_par_starts = 0.9)
}
}
\seealso{
Other drift diffusion model functions: 
\code{\link{coef.td_ddm}()},
\code{\link{deviance.td_ddm}()},
\code{\link{fitted.td_ddm}()},
\code{\link{logLik.td_ddm}()},
\code{\link{predict.td_ddm}()}
}
\concept{drift diffusion model functions}
